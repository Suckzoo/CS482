#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec2 vertexUV;
layout(location = 2) in vec3 vertexNormal;

smooth out vec2 UV;
out vec3 Normal_Cameraspace;
out vec3 EyeDirection_Cameraspace;
out vec3 Position_worldspace;

uniform mat4 VP;
uniform mat4 M;
uniform mat4 MITM;

void main() {
	vec3 vertexPosition_Cameraspace = (M * vec4(vertexPosition_modelspace, 1)).xyz;
	gl_Position = VP * M * vec4(vertexPosition_modelspace, 1);
	UV = vertexUV;
	Position_worldspace = vertexPosition_Cameraspace;
	Normal_Cameraspace = (MITM * vec4(vertexNormal, 0)).xyz;
	EyeDirection_Cameraspace = vec3(0,0,0) - vertexPosition_Cameraspace;
}